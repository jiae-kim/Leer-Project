<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE properties SYSTEM "http://java.sun.com/dtd/properties.dtd">
<properties>
	
	<!-- 상품전체조회 -->
	<entry key="selectProductList">
		SELECT *
		  FROM (
		  		SELECT ROWNUM RNUM, A.*
		  		  FROM (
		  		  		SELECT 
		  		  			    P_NAME
					          , CATEGORY_NO
					          , P_CODE
					          , PUBLISHER
					          , PUBLISH_MONTH
					          , PRICE
					          , ENROLL_DATE
					          , P_STOCK
					       FROM PRODUCT
					      WHERE P_STATUS = 'Y'
					      ORDER BY ENROLL_DATE DESC
		  		 		) A
		  		)
		  WHERE RNUM BETWEEN ? AND ?  
	</entry>
	
	<!-- 상품전체조회 : 페이징 -->
	<entry key="selectProductListCount">
		SELECT COUNT(*) AS "COUNT"
		  FROM PRODUCT
	</entry>	
	
	<!-- 상품등록 페이지 요청 -->
	<entry key="selectCategoryList">
		SELECT
			  	CATEGORY_NO
			  ,	CATEGORY_NAME
		   FROM	CATEGORY
	</entry>
	
	<!-- 상품등록 -->
     <entry key="insertProduct">
     	INSERT
     	  INTO PRODUCT
     	  (
     	  	P_NAME
     	  , PUBLISH_MONTH
     	  , PUBLISHER
     	  , CATEGORY_NO
     	  , P_CODE
     	  , PRICE
     	  , P_STOCK
     	  , DELI_FEE
     	  , POINT
     	  , IMAGE_URL1
     	  , IMAGE_URL2
     	  , IMAGE_URLS
     	  )
     	  VALUES
     	  (
     	  	?
     	  ,	to_date(?, 'MM/DD/YYYY')
     	  , ?
     	  , ?
     	  , ? || SEQ_pcode.NEXTVAL 
     	  , ?
     	  , ?
     	  , ?
     	  , ?
     	  , ?
     	  , ?
     	  , ?
     	  )
     </entry>     
     
     <!-- 상품등록 시 첨부파일 -->
     <entry key="insertAttachment">
     	INSERT
		  INTO ATTACHMENT
		  (
		    FILE_NO
		  , REF_CODE 
		  , REF_BNO
		  , ORIGIN_NAME
		  , CHANGE_NAME
		  , FILE_PATH
		  )
		  VALUES
		  (
		     SEQ_FILE.NEXTVAL 
		   , 'PRODUCT' 
		   , SEQ_PRODUCT.CURRVAL <!-- 현재 참조하는 게시물과 동일한이름 -->
		   , ? 
		   , ?
		   , ?
		   )
     </entry>         
     
	<!-- 상품 전체조회 페이지 : 수정버튼 -->
	 <entry key="selectProduct">
		   SELECT
			        P_NAME
			     ,  PUBLISH_MONTH
			     ,  PUBLISHER
			     ,  CATEGORY_NO
			     ,  P_CODE
			     ,  PRICE
			     ,  P_STOCK
			     ,  DELI_FEE
			     ,  POINT
			     , 	IMAGE_URL1
			     , 	IMAGE_URL2
			     ,	IMAGE_URLS
			  FROM  PRODUCT
			 WHERE  P_CODE = ? <!-- 수정하고자 하는 상품 코드 -->
	 </entry>
     	  
	 <entry key="selectAttachment">
	 	SELECT
	 			FILE_NO 
	 		  ,	ORIGIN_NAME
	 		  , CHANGE_NAME
	 		  , FILE_PATH
	 	  FROM	ATTACHMENT
	 	 WHERE	REF_BNO = ? <!-- 참조 게시글 번호 -->
	 	 ORDER  BY FILE_LEVEL ASC
	 </entry>
	 
	 <!-- 상품수정 -->             
	 <entry key="updateProduct">
	 	UPDATE
		        PRODUCT
		   SET  P_NAME = ?
		     ,  PUBLISH_MONTH = ?
		     ,  PUBLISHER = ?
		     ,  CATEGORY_NO = ?
		     ,  P_CODE = ? || SEQ_PCODE.NEXTVAL
		     ,  PRICE = ?
		     ,  P_STOCK = ?
		     ,  DELI_FEE = ?
		     ,  POINT = ?
		     , 	IMAGE_URL1 = ?
		     , 	IMAGE_URL2 = ?
		     ,	IMAGE_URLS = ?
		 WHERE  P_CODE = ? <!-- 수정하고자 하는 상품 -->
	 </entry>
    
	 <!-- 상품전체조회 페이지 : 삭제버튼 -->
	 <entry key="deleteProduct">
	 	UPDATE PRODUCT
	 	   SET P_STATUS = 'N'
	 	 WHERE P_CODE = ? <!-- 삭제하고자 하는 상품 코드 -->
	 </entry>
	   
    <!-- 상품 재고 전체조회 -->                  
	<entry key="selectProductIoList">
		SELECT *
		  FROM (
		  		SELECT ROWNUM RNUM, A.*
		  		  FROM (
		  		  		SELECT
		  		  			   PI.STATUS_NO
						     , P.P_CODE
						     , P.P_NAME
						     , PI.STATUS_AMOUNT
						     , PI.STATUS_DATE
						     , PI.STATUS
						  FROM PRODUCT P
						  JOIN PRODUCT_IO PI ON (PI.P_CODE = P.P_CODE)
						 ORDER BY STATUS_NO DESC
		  		 		) A
		  		)
		  WHERE RNUM BETWEEN ? AND ?  
	</entry>
	
	<!-- 상품전체조회 : 페이징 -->
	<entry key="selectProductListIoCount">
		SELECT COUNT(*) AS "COUNT"
		  FROM PRODUCT_IO
	</entry>	             
	
	<!-- 상품문의 전체조회 -->
	<entry key = "selectProductIqList">
		SELECT *
		  FROM (
		  		SELECT ROWNUM RNUM, A.*
		  		  FROM (
		  		  		SELECT
						        I.Q_NO
						     ,  M.MEM_ID 
						     ,  I.Q_CATEGORY
						     ,  I.P_CODE
						     ,  I.TITLE
						     ,  I.ENROLL_DATE
						     ,  I.Q_YN
						  FROM INQUIRY I
						  LEFT JOIN MEMBER M ON (I.MEM_NO = M.MEM_NO)
						 ORDER BY Q_NO DESC
		  		 		) A
		  		)
		  WHERE RNUM BETWEEN ? AND ? 	
	</entry>
	
	<!-- 상품문의 전체조회 : 페이징 -->	
	<entry key = "selectProductIqListCount">
		SELECT COUNT(*) AS "COUNT"
		  FROM INQUIRY
	</entry>
	          
	<!-- 상품리뷰 전제조회 -->
	<entry key="selectProductReviewList">
		SELECT *
		  FROM (
		  		SELECT ROWNUM RNUM, A.*
		  		  FROM (
				SELECT
				        R.REVIEW_NO
				      , M.MEM_ID
				      , R.P_NAME
				      , R.P_CODE
				      , R.REVIEW_CONTENT
				      , R.REVIEW_SCOPE
				      , R.ENROLL_DATE
				      , R.WRITE_YN
				   FROM REVIEW R
				   JOIN MEMBER M ON (R.MEM_NO = M.MEM_NO)
				  WHERE R.WRITE_YN = 'Y'
				  ORDER BY REVIEW_NO DESC
		  		 		) A
		  		)
		  WHERE RNUM BETWEEN ? AND ? 	
	</entry>
	
	<!-- 상품리뷰 전체조회 : 페이징 -->
	<entry key="selectProductReviewListCount">
		SELECT COUNT(*) AS "COUNT"
	      FROM REVIEW
	</entry>
	
	<!-- 상품재고 전체조회 : 입고등록 -->
	<entry key="StockInsertPage">
		INSERT 
		  INTO PRODUCT_IO
		     (
		      	STATUS_NO
		      , P_CODE
		      , STATUS
		      , STATUS_AMOUNT
		      , STATUS_DATE
		      )
		 VALUES
		      (
		      	 SEQ_STAT.NEXTVAL
		       , ?
		       , '입고'
		       , ?
		       , to_date(?, 'MM/DD/YYYY')
		       )
	</entry>
	 
	 <!-- 상품문의 상세조회 -->
	 <entry key="InquiryDetailList">
		 SELECT
		        I.Q_NO
		      , M.MEM_ID
		      , I.P_CODE
		      , P.P_NAME
		      , I.Q_CATEGORY
		      , I.TITLE
		      , I.CONTENT
		      , I.ENROLL_DATE
		  FROM  INQUIRY I
		  LEFT  JOIN MEMBER M ON (I.MEM_NO = M.MEM_NO)
		  LEFT  JOIN PRODUCT P ON (I.P_CODE = P.P_CODE)
		  ORDER BY I.Q_NO DESC
	 </entry>
	 
	 
</properties>